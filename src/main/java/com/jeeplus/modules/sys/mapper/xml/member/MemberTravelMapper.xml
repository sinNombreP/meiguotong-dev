<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.sys.mapper.member.MemberTravelMapper">
    
	<sql id="memberTravelColumns">
		b.memberid AS "memberid",
		b.photo AS "photo",
		b.company_type AS "companyType",
		b.address AS "address",
		b.legal_person AS "legalPerson",
		b.company_name AS "companyName",
		b.company_logo AS "companyLogo",
		b.company_img AS "companyImg",
		b.company_email AS "companyEmail",
		b.cards_img AS "cardsImg",
		b.company_content AS "companyContent",
		b.countryid as "countryid",
		b.cityid as "cityid",
		b.phone as "phone"
	</sql>
	
		<sql id="memberColumns">
		a.id AS "id",
		a.father_id AS "fatherId",
		a.code AS "code",
		a.mobile AS "mobile",
		a.password AS "password",
		a.status AS "status",
		a.audit AS "audit",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.del_date AS "delDate",
		a.del_by AS "delBy",
		a.lastlogin_date AS "lastloginDate",
		a.lastlogin_ip AS "lastloginIp",
		a.login_deyid AS "loginDeyid",
		a.create_type AS "createType",
		a.email AS "email",
		a.loginx AS "loginx",
		a.loginy AS "loginy",
		a.type AS "type",
		a.qq_id AS "qqId",
		a.weixin_id AS "weixinId",
		a.weibo_id AS "weiboId"
	</sql>
	
	<sql id="memberTravelJoins">
		LEFT JOIN member_travel b  ON a.id = b.memberid
	</sql>
	
    
	<select id="get" resultType="MemberTravel" >
		SELECT 
			<include refid="memberColumns"/>,
			<include refid="memberTravelColumns"/>
		FROM  member a
		<include refid="memberTravelJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="MemberTravel" >
		SELECT 
			<include refid="memberColumns"/>,
			<include refid="memberTravelColumns"/>
		FROM member a
		<include refid="memberTravelJoins"/>
		<where>
			${dataScope}
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="type != null">
				AND a.type = #{type}
			</if>
			<if test="searchContent != null and searchContent != ''">
				AND (a.mobile LIKE concat('%',#{searchContent},'%') OR a.email LIKE concat('%',#{searchContent},'%') )
			</if>
			<if test="status != null">
				AND a.status = #{status}
			</if>
			<if test="fatherId != null">
				AND a.father_id = #{fatherId}
			</if>
			<if test="lastloginDate != null">
				AND a.lastlogin_date >= #{lastloginDate}
			</if>
			<if test="companyName != null and companyName != '' ">
				AND a.company_name  LIKE concat('%',#{companyName},'%')
			</if>
		</where>
			ORDER BY a.create_date DESC
	</select>
	
	<select id="findAllList" resultType="MemberTravel" >
		SELECT 
			<include refid="memberColumns"/>,
			<include refid="memberTravelColumns"/>
		FROM member a
		<include refid="memberTravelJoins"/>
		<where>
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
		<!-- 修改审核状态 -->
	<update id="changeAudit">
		UPDATE member SET 	
			audit = #{audit}
		WHERE id = #{id}
	</update>
	
	<!-- 获取子账号 -->
	<select id="getSon" resultType="Member">
		SELECT 
			<include refid="memberColumns"/>
		FROM  member a
		WHERE a.del_flag = 0 AND a.father_id = #{id}
	</select>
	
	<insert id="insert">
		INSERT INTO member_travel(
			company_email,
			memberid,
			photo,
			company_type,
			address,
			legal_person,
			nick_name,
			company_name,
			company_img,
			cards_img,
			company_content,
			company_logo,
			countryid,
			cityid,
			phone
		) VALUES (
			#{companyEmail},
			#{memberid},
			#{photo},
			#{companyType},
			#{address},
			#{legalPerson},
			#{companyName},
			#{companyName},
			#{companyImg},
			#{cardsImg},
			#{companyContent},
			#{companyLogo},
			#{countryid},
			#{cityid},
			#{phone}
		)
	</insert>
	
	<update id="update">
		UPDATE member_travel SET 	
			company_email = #{companyEmail},
			memberid = #{memberid},
			photo = #{photo},
			company_type = #{companyType},
			address = #{address},
			legal_person = #{legalPerson},
			nick_name = #{companyName},
			company_name = #{companyName},
			company_img = #{companyImg},
			cards_img = #{cardsImg},
			company_content = #{companyContent},
			company_logo = #{companyLogo},
			countryid = #{countryid},
			cityid = #{cityid},
			phone = #{phone}
		WHERE memberid = #{memberid}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM member_travel
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE member_travel SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="MemberTravel" statementType="STATEMENT">
		select * FROM member_travel  where ${propertyName} = '${value}'
	</select>
	
</mapper>