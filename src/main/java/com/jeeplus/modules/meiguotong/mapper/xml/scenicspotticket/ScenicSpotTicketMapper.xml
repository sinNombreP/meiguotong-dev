<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.meiguotong.mapper.scenicspotticket.ScenicSpotTicketMapper">
    
	<sql id="scenicSpotTicketColumns">
		a.id AS "id",
		a.name AS "name",
		a.rule AS "rule",
		a.price AS "price",
		a.marketPrice AS "marketPrice",
		a.validity_date AS "validityDate",
		a.status AS "status",
		a.create_date AS "createDate",
		a.create_by AS "createBy.id",
		a.update_date AS "updateDate",
		a.update_by AS "updateBy.id",
		a.del_date AS "delDate",
		a.del_by AS "delBy",
		a.del_flag AS "delFlag",
		a.language_id AS "languageId",
		a.scenicid AS "scenicid",
		a.scenici_company AS "sceniciCompany",
		a.if_custom as "ifCustom"
	</sql>
	
	<sql id="scenicSpotTicketJoins">
		
	</sql>
	
	<!-- 景点门票列表 -->
	<select id="getScenicSpotTicketList" resultType="ScenicSpotTicket">
		SELECT 
			<include refid="scenicSpotTicketColumns"/>,
			b.img_url AS "imgUrl"
		FROM scenic_spot_ticket a
		LEFT JOIN scenic_spot b ON b.id = a.scenicid
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL} AND NOW() &lt; a.validity_date
			${dataScope}
			<if test="languageId != null">
				AND a.language_id = #{languageId}
			</if>
			<if test="status != null">
				AND a.status = #{status}
			</if>
			<if test="ids != null and ids != '' ">
				AND FIND_IN_SET(a.id,#{ids}) > 0
			</if>
		</where>
		ORDER BY a.update_date DESC
	</select>
    <!-- 查询景点的定制门票 -->
    <select id="getTicket" resultType="ScenicSpotTicket" >
		SELECT 
			<include refid="scenicSpotTicketColumns"/>
		FROM scenic_spot_ticket a
		<include refid="scenicSpotTicketJoins"/>
		WHERE a.scenicid = #{scenicid} and a.del_flag=0 and a.if_custom=2 limit 1
	</select>
    
	<select id="get" resultType="ScenicSpotTicket" >
		SELECT 
			<include refid="scenicSpotTicketColumns"/>
		FROM scenic_spot_ticket a
		<include refid="scenicSpotTicketJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ScenicSpotTicket" >
		SELECT 
			<include refid="scenicSpotTicketColumns"/>
		FROM scenic_spot_ticket a
		<include refid="scenicSpotTicketJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="scenicid != null and scenicid != ''">
				AND a.scenicid =#{scenicid}
					
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	<select id="getList" resultType="ScenicSpotTicket" >
		SELECT 
			a.id AS "id",
			a.name AS "name",
			a.rule AS "rule",
			a.marketPrice AS "marketPrice",
			a.price AS "price"
		FROM scenic_spot_ticket a
		<where>
			a.del_flag =0 and a.status=1 and a.scenicid=#{scenicid}
			and a.validity_date>now()
			and if_custom=1
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	<select id="findAllList" resultType="ScenicSpotTicket" >
		SELECT 
			<include refid="scenicSpotTicketColumns"/>
		FROM scenic_spot_ticket a
		<include refid="scenicSpotTicketJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO scenic_spot_ticket(
			name,
			rule,
			price,
			marketPrice,
			validity_date,
			status,
			create_date,
			create_by,
			update_date,
			update_by,
			del_date,
			del_by,
			del_flag,
			language_id,
			scenicid,
			scenici_company,
			if_custom
		) VALUES (
			#{name},
			#{rule},
			#{price},
			#{marketPrice},
			#{validityDate},
			#{status},
			#{createDate},
			#{createBy.id},
			#{updateDate},
			#{updateBy.id},
			#{delDate},
			#{delBy},
			#{delFlag},
			#{languageId},
			#{scenicid},
			#{sceniciCompany},
			1
		)
	</insert>
	<!-- 更改状态 -->
	<update id="status">
	UPDATE scenic_spot_ticket SET
	status=#{status},
	update_date = #{updateDate}
	WHERE id = #{id}
	</update>
	<update id="update">
		UPDATE scenic_spot_ticket SET 	
			name = #{name},
			rule = #{rule},
			price = #{price},
			marketPrice = #{marketPrice},
			validity_date = #{validityDate},
			status = #{status},
			update_date = #{updateDate},
			update_by = #{updateBy.id},
			del_date = #{delDate},
			del_by = #{delBy},
			language_id = #{languageId},
			scenicid = #{scenicid},
			scenici_company = #{sceniciCompany}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM scenic_spot_ticket
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE scenic_spot_ticket SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="ScenicSpotTicket" statementType="STATEMENT">
		select * FROM scenic_spot_ticket  where ${propertyName} = '${value}'
	</select>
	
	
	<select id="checkDateByScenicid" resultType="ScenicSpotTicket" >
		SELECT 
			<include refid="scenicSpotTicketColumns"/>
		FROM scenic_spot_ticket a
		<include refid="scenicSpotTicketJoins"/>
		WHERE a.id = #{id}
	</select>
	
	
	<select id="productCar_findScenice" resultType="ScenicSpotTicket" >
		SELECT 
			<include refid="scenicSpotTicketColumns"/>,
			s.id as "scenicSpotId", 
			s.name as "sceniceName",
			s.address,
			s.content,
			s.city_id as "cityid",
			b1.city_name as "cityName"
		FROM scenic_spot_ticket a
		<include refid="scenicSpotTicketJoins"/>
		left join scenic_spot s on a.scenicid=s.id
		left join com_city b1 on b1.id = s.city_id
		WHERE a.id = #{id}
	</select>
</mapper>